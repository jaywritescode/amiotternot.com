import { Box, Center, Flex, Heading, HStack, Text } from "@chakra-ui/react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCreativeCommons,
  faCreativeCommonsBy,
} from "@fortawesome/free-brands-svg-icons";
import _ from "lodash";
import Head from "next/head";
import {
  Attribution,
  MainImage,
  OtterButton,
  VoteResults,
} from "../components";

import styles from "../styles/Home.module.css";

export default function Home(props) {
  const {
    current: { id: image_id, keyword, width, height, user, user_id },
    previous,
  } = props;

  return (
    <div className={styles.container}>
      <Head>
        <title>Am I Otter Not?</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Heading as="h1" size="3xl" fontFamily="primary" color="green.600">
          Am I Otter Not?!?
        </Heading>

        <Text color="yellow.800" fontFamily="secondary">
          {"mustelids don't give a shit"}
        </Text>

        <Box width={880}>
          <HStack spacing={"6"}>
            <Box width={640} height={480}>
              <Center h={480}>
                <MainImage
                  image_id={image_id}
                  width={width}
                  height={height}
                  keyword={keyword}
                />
              </Center>

              <Attribution user={user} user_id={user_id} />

              <Flex justify="space-around">
                <OtterButton id={image_id} isOtter={true}>
                  Otter!
                </OtterButton>
                <OtterButton id={image_id} isOtter={false}>
                  Not!
                </OtterButton>
              </Flex>
            </Box>

            {!_.isEmpty(previous) && <VoteResults {...previous} />}
          </HStack>
        </Box>
      </main>

      <footer className={styles.footer}>
        <Text fontSize={"xs"}>
          <a href="https://amiotternot.com">amiotternot</a> by{" "}
          <a href="https://jaywritesco.de">jay harris</a> is{" "}
          <a
            href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1"
            target="_blank"
            rel="license noopener noreferrer"
          >
            licensed
          </a>{" "}
          under CC BY 4.0 <FontAwesomeIcon icon={faCreativeCommons} />{" "}
          <FontAwesomeIcon icon={faCreativeCommonsBy} />
        </Text>
      </footer>
    </div>
  );
}

import sqlite3 from "sqlite3";

const DATABASE = "pics.db";

export async function getServerSideProps(context) {
  const db = new sqlite3.Database(DATABASE);
  const { query } = context;

  try {
    const current = await new Promise((resolve, reject) => {
      db.get(
        "SELECT id, keyword, width, height, user, user_id FROM images ORDER BY random() limit 1",
        (err, row) => {
          if (err) reject(err);
          else resolve(row);
        }
      );
    });

    const previous = await new Promise((resolve, reject) => {
      if (_.isEmpty(query)) {
        resolve({});
        return;
      }

      db.all(
        "SELECT image_id, is_otter, COUNT(is_otter) as count, keyword, width, height " +
          "FROM images JOIN votes ON images.id=votes.image_id WHERE image_id=? GROUP BY is_otter",
        query.previousImage,
        (err, rows) => {
          if (err) reject(err);
          else {
            const upvotes_row = _.find(rows, ["is_otter", 1]);

            resolve({
              image_id: rows[0]["image_id"],
              upvotes: upvotes_row ? upvotes_row["count"] : 0,
              totalVotes: _.sumBy(rows, "count"),
              keyword: rows[0]["keyword"],
              width: rows[0]["width"],
              height: rows[0]["height"],
            });
          }
        }
      );
    });

    return { props: { current, previous } };
  } catch (err) {
    return { notFound: true };
  }
}
