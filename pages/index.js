import { Box, Center, Flex, Heading, HStack, Text } from "@chakra-ui/react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCreativeCommons,
  faCreativeCommonsBy,
} from "@fortawesome/free-brands-svg-icons";
import _ from "lodash";
import Head from "next/head";
import {
  Attribution,
  MainImage,
  OtterButton,
  VoteResults,
} from "../components";

import styles from "../styles/Home.module.css";

export default function Home(props) {
  const {
    current: { image_id, keyword, width, height, username, user_id },
    previous,
  } = props;

  return (
    <div className={styles.container}>
      <Head>
        <title>Am I Otter Not?</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Heading as="h1" size="3xl" fontFamily="primary" color="green.600">
          Am I Otter Not?!?
        </Heading>

        <Text color="yellow.800" fontFamily="secondary">
          {"mustelids don't give a shit"}
        </Text>

        <Box width={880}>
          <HStack spacing={"6"}>
            <Box width={640} height={480}>
              <Center h={480}>
                <MainImage
                  image_id={image_id}
                  width={width}
                  height={height}
                  keyword={keyword}
                />
              </Center>

              <Attribution user={username} user_id={user_id} />

              <Flex justify="space-around">
                <OtterButton id={image_id} isOtter={true}>
                  Otter!
                </OtterButton>
                <OtterButton id={image_id} isOtter={false}>
                  Not!
                </OtterButton>
              </Flex>
            </Box>

            {!_.isEmpty(previous) && <VoteResults {...previous} />}
          </HStack>
        </Box>
      </main>

      <footer className={styles.footer}>
        <Text fontSize={"xs"}>
          <a href="https://amiotternot.com">amiotternot</a> by{" "}
          <a href="https://jaywritesco.de">jay harris</a> is{" "}
          <a
            href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1"
            target="_blank"
            rel="license noopener noreferrer"
          >
            licensed
          </a>{" "}
          under CC BY 4.0 <FontAwesomeIcon icon={faCreativeCommons} />{" "}
          <FontAwesomeIcon icon={faCreativeCommonsBy} />
        </Text>
      </footer>
    </div>
  );
}

import { Client } from "pg";

export async function getServerSideProps(context) {
  const { query } = context;

  const clientConn = Object.assign(
    {},
    {
      connectionString: process.env.DATABASE_URL,
    },
    process.env.ENVIRONMENT == "prod"
      ? { ssl: { rejectUnauthorized: false } }
      : {}
  );

  try {
    const client = new Client(clientConn);
    await client.connect();

    const current = await client.query(
      "SELECT id as image_id, keyword, width, height, username, user_id FROM amiotternot.images ORDER BY random() LIMIT 1"
    );

    const props = {
      current: current.rows[0],
      previous: {}
    }

    if (!_.isEmpty(query)) {
      const votes = await client.query(
        "SELECT is_otter, COUNT(is_otter) as count FROM amiotternot.votes WHERE image_id=$1 GROUP BY is_otter",
        [query.previousImage]
      );

      const upvotes_row = _.find(votes.rows, ["is_otter", true]);
      Object.assign(props.previous, {
        upvotes: (upvotes_row && upvotes_row.count) || 0,
        totalVotes: _.sumBy(votes.rows, "count"),
      });

      const previous = await client.query(
        "SELECT id, keyword, width, height FROM amiotternot.images WHERE id=$1", [query.previousImage]
      );

      Object.assign(props.previous, previous.rows[0]);
    }

    console.log(props);

    return { props };
  } catch (err) {
    console.log(err);
    return { notFound: true };
  }
}
